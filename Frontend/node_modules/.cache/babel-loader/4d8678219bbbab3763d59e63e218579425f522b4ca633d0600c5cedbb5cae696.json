{"ast":null,"code":"var _jsxFileName = \"/home/yair/Escritorio/PROYECTO2_MIA/MIA_1S2025_P2_202204578/Frontend/src/PartitionSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PartitionSelector() {\n  _s();\n  var _location$state;\n  const {\n    diskName\n  } = useParams(); // ✅ se usa para mantener la estructura, aunque no es esencial si se pasa por state\n  const location = useLocation();\n  const navigate = useNavigate();\n  const diskPath = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.path) || localStorage.getItem(\"selectedDiskPath\");\n  const [partitions, setPartitions] = useState([]);\n  useEffect(() => {\n    if (diskPath) {\n      localStorage.setItem(\"selectedDiskPath\", diskPath); // Guardar por si recarga\n      fetch(`http://localhost:3001/partitions?path=${encodeURIComponent(diskPath)}`).then(res => res.json()).then(data => setPartitions(data)).catch(() => setPartitions([]));\n    }\n  }, [diskPath]);\n  const handleSelectPartition = partition => {\n    navigate(`/viewer/${partition.id}`, {\n      state: {\n        disk: {\n          name: partition.name,\n          partition_id: partition.id,\n          path: diskPath,\n          size: partition.size,\n          fit: partition.fit,\n          status: partition.status\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.page,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.title,\n        children: \"Visualizador del Sistema de Archivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.subtitle,\n        children: \"Seleccione la partici\\xF3n que desea visualizar:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.grid,\n        children: partitions.length > 0 ? partitions.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.partitionCard,\n          onClick: () => handleSelectPartition(p),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/partition-icon.png\",\n            alt: \"Partici\\xF3n\",\n            style: styles.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: p.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tama\\xF1o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 20\n            }, this), \" \", p.size]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fit:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 20\n            }, this), \" \", p.fit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Estado:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 20\n            }, this), \" \", p.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#777\"\n          },\n          children: \"No se encontraron particiones activas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/discos\"),\n        style: styles.backBtn,\n        children: \"Volver a Discos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(PartitionSelector, \"DM5OPJE2klL9Slz5TJm2QEPKhR4=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = PartitionSelector;\nconst styles = {\n  page: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    fontFamily: \"Segoe UI, sans-serif\"\n  },\n  card: {\n    backgroundColor: \"#ffffff\",\n    padding: \"2.5rem\",\n    borderRadius: \"12px\",\n    boxShadow: \"0 4px 16px rgba(0,0,0,0.1)\",\n    width: \"90%\",\n    maxWidth: \"800px\",\n    textAlign: \"center\"\n  },\n  title: {\n    fontSize: \"1.8rem\",\n    marginBottom: \"0.5rem\"\n  },\n  subtitle: {\n    marginBottom: \"1.5rem\",\n    color: \"#444\"\n  },\n  grid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    gap: \"1.5rem\"\n  },\n  partitionCard: {\n    backgroundColor: \"#eef7f9\",\n    borderRadius: \"10px\",\n    padding: \"1rem\",\n    cursor: \"pointer\",\n    width: \"160px\",\n    boxShadow: \"0 3px 8px rgba(0,0,0,0.1)\",\n    transition: \"transform 0.2s\"\n  },\n  img: {\n    width: \"48px\",\n    marginBottom: \"0.5rem\"\n  },\n  backBtn: {\n    marginTop: \"2rem\",\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#444\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  }\n};\nexport default PartitionSelector;\nvar _c;\n$RefreshReg$(_c, \"PartitionSelector\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","useParams","jsxDEV","_jsxDEV","PartitionSelector","_s","_location$state","diskName","location","navigate","diskPath","state","path","localStorage","getItem","partitions","setPartitions","setItem","fetch","encodeURIComponent","then","res","json","data","catch","handleSelectPartition","partition","id","disk","name","partition_id","size","fit","status","style","styles","page","children","card","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","grid","length","map","p","partitionCard","onClick","src","alt","img","color","backBtn","_c","display","justifyContent","alignItems","minHeight","backgroundColor","fontFamily","padding","borderRadius","boxShadow","width","maxWidth","textAlign","fontSize","marginBottom","flexWrap","gap","cursor","transition","marginTop","border","fontWeight","$RefreshReg$"],"sources":["/home/yair/Escritorio/PROYECTO2_MIA/MIA_1S2025_P2_202204578/Frontend/src/PartitionSelector.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\n\nfunction PartitionSelector() {\n  const { diskName } = useParams(); // ✅ se usa para mantener la estructura, aunque no es esencial si se pasa por state\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const diskPath = location.state?.path || localStorage.getItem(\"selectedDiskPath\");\n  const [partitions, setPartitions] = useState([]);\n\n  useEffect(() => {\n    if (diskPath) {\n      localStorage.setItem(\"selectedDiskPath\", diskPath); // Guardar por si recarga\n      fetch(`http://localhost:3001/partitions?path=${encodeURIComponent(diskPath)}`)\n        .then((res) => res.json())\n        .then((data) => setPartitions(data))\n        .catch(() => setPartitions([]));\n    }\n  }, [diskPath]);\n\n  const handleSelectPartition = (partition) => {\n    navigate(`/viewer/${partition.id}`, {\n      state: {\n        disk: {\n          name: partition.name,\n          partition_id: partition.id,\n          path: diskPath,\n          size: partition.size,\n          fit: partition.fit,\n          status: partition.status,\n        },\n      },\n    });\n  };\n\n  return (\n    <div style={styles.page}>\n      <div style={styles.card}>\n        <h2 style={styles.title}>Visualizador del Sistema de Archivos</h2>\n        <p style={styles.subtitle}>Seleccione la partición que desea visualizar:</p>\n\n        <div style={styles.grid}>\n          {partitions.length > 0 ? (\n            partitions.map((p) => (\n              <div\n                key={p.id}\n                style={styles.partitionCard}\n                onClick={() => handleSelectPartition(p)}\n              >\n                <img src=\"/partition-icon.png\" alt=\"Partición\" style={styles.img} />\n                <p><strong>{p.name}</strong></p>\n                <p><strong>Tamaño:</strong> {p.size}</p>\n                <p><strong>Fit:</strong> {p.fit}</p>\n                <p><strong>Estado:</strong> {p.status}</p>\n              </div>\n            ))\n          ) : (\n            <p style={{ color: \"#777\" }}>No se encontraron particiones activas.</p>\n          )}\n        </div>\n\n        <button onClick={() => navigate(\"/discos\")} style={styles.backBtn}>\n          Volver a Discos\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  page: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    fontFamily: \"Segoe UI, sans-serif\",\n  },\n  card: {\n    backgroundColor: \"#ffffff\",\n    padding: \"2.5rem\",\n    borderRadius: \"12px\",\n    boxShadow: \"0 4px 16px rgba(0,0,0,0.1)\",\n    width: \"90%\",\n    maxWidth: \"800px\",\n    textAlign: \"center\",\n  },\n  title: {\n    fontSize: \"1.8rem\",\n    marginBottom: \"0.5rem\",\n  },\n  subtitle: {\n    marginBottom: \"1.5rem\",\n    color: \"#444\",\n  },\n  grid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    gap: \"1.5rem\",\n  },\n  partitionCard: {\n    backgroundColor: \"#eef7f9\",\n    borderRadius: \"10px\",\n    padding: \"1rem\",\n    cursor: \"pointer\",\n    width: \"160px\",\n    boxShadow: \"0 3px 8px rgba(0,0,0,0.1)\",\n    transition: \"transform 0.2s\",\n  },\n  img: {\n    width: \"48px\",\n    marginBottom: \"0.5rem\",\n  },\n  backBtn: {\n    marginTop: \"2rem\",\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#444\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n  },\n};\n\nexport default PartitionSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}